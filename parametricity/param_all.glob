DIGEST 0bd74d6d513198dd238e472bcec2f216
FMetaCoq.Translations.param_all
R140:144 MetaCoq.Template.utils <> <> lib
R146:148 MetaCoq.Template.All <> <> lib
R192:208 MetaCoq.Translations.translation_utils <> <> lib
R248:253 MetaCoq.Template.Pretty <> <> lib
R298:308 MetaCoq.Translations.param_unary <> <> lib
R310:321 MetaCoq.Translations.param_exists <> <> lib
R323:333 MetaCoq.Translations.param_other <> <> lib
def 502:509 <> aliasDef
binder 512:512 <> A:1
R518:518 MetaCoq.Translations.param_all <> A:1 var
binder 516:516 <> t:2
R535:536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R537:541 MetaCoq.Template.BasicAst <> ident def
R530:534 MetaCoq.Template.BasicAst <> ident def
binder 522:525 <> from:3
binder 527:528 <> to:4
R553:556 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R567:573 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R557:564 MetaCoq.Translations.param_exists <> getIdent def
R566:566 MetaCoq.Translations.param_all <> t:2 var
binder 551:552 <> id:5
R576:579 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R601:607 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R580:585 MetaCoq.Template.TemplateMonad.Core <> tmEval constr
R593:596 MetaCoq.Translations.param_all <> from:3 var
R598:599 MetaCoq.Translations.param_all <> id:5 var
R587:590 MetaCoq.Template.TemplateMonad.Common <> lazy constr
binder 574:575 <> na:6
R610:613 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R627:633 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R614:623 MetaCoq.Translations.param_other <> getDefTerm def
R625:626 MetaCoq.Translations.param_all <> na:6 var
binder 608:609 <> tm:7
R634:647 MetaCoq.Template.TemplateMonad.Core <> tmMkDefinition def
R657:658 MetaCoq.Translations.param_all <> tm:7 var
R650:651 MetaCoq.Translations.param_all <> to:4 var
R653:654 MetaCoq.Translations.param_all <> id:5 var
def 711:722 <> translateAll
binder 725:725 <> A:8
R731:731 MetaCoq.Translations.param_all <> A:8 var
binder 729:729 <> t:9
R773:779 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R741:765 MetaCoq.Translations.param_unary <> persistentTranslate_prune def
R769:772 Coq.Init.Datatypes <> true constr
R767:767 MetaCoq.Translations.param_all <> t:9 var
R807:813 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R780:804 MetaCoq.Translations.param_exists <> persistentExistsTranslate def
R806:806 MetaCoq.Translations.param_all <> t:9 var
R830:836 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R814:827 MetaCoq.Translations.param_other <> existsAllParam def
R829:829 MetaCoq.Translations.param_all <> t:9 var
R853:859 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R837:850 MetaCoq.Translations.param_other <> allExistsParam def
R852:852 MetaCoq.Translations.param_all <> t:9 var
R905:911 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R860:867 MetaCoq.Translations.param_all <> aliasDef def
R889:904 MetaCoq.Translations.param_other <> tsl_ident_allall def
R871:887 MetaCoq.Translations.param_unary <> tsl_ident_unparam def
R869:869 MetaCoq.Translations.param_all <> t:9 var
R962:968 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_';;'_x not
R912:919 MetaCoq.Translations.param_all <> aliasDef def
R940:961 MetaCoq.Translations.param_other <> tsl_ident_existsexists def
R923:938 MetaCoq.Translations.param_exists <> tsl_ident_exists def
R921:921 MetaCoq.Translations.param_all <> t:9 var
R971:974 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R985:1031 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R975:982 MetaCoq.Translations.param_exists <> getIdent def
R984:984 MetaCoq.Translations.param_all <> t:9 var
binder 969:970 <> id:10
R1051:1056 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1057:1057 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1078:1079 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1058:1074 MetaCoq.Translations.param_unary <> tsl_ident_unparam def
R1076:1077 MetaCoq.Translations.param_all <> id:10 var
R1083:1088 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1089:1089 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1109:1110 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1090:1105 MetaCoq.Translations.param_other <> tsl_ident_allall def
R1107:1108 MetaCoq.Translations.param_all <> id:10 var
R1115:1120 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1121:1121 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1144:1145 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1122:1140 MetaCoq.Translations.param_other <> tsl_ident_allexists def
R1142:1143 MetaCoq.Translations.param_all <> id:10 var
R1150:1155 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1156:1156 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1179:1180 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1157:1175 MetaCoq.Translations.param_other <> tsl_ident_existsall def
R1177:1178 MetaCoq.Translations.param_all <> id:10 var
R1189:1194 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1195:1195 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1215:1216 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1196:1211 MetaCoq.Translations.param_exists <> tsl_ident_exists def
R1213:1214 MetaCoq.Translations.param_all <> id:10 var
R1220:1225 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1226:1226 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1252:1253 MetaCoq.Template.utils <> ::string_scope2:x_'^'_x not
R1227:1248 MetaCoq.Translations.param_other <> tsl_ident_existsexists def
R1250:1251 MetaCoq.Translations.param_all <> id:10 var
binder 1036:1036 <> s:11
R1269:1273 MetaCoq.Template.TemplateMonad.Core <> tmMsg constr
R1275:1275 MetaCoq.Translations.param_all <> s:11 var
def 1342:1348 <> getName
R1358:1361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1362:1364 Coq.Init.Datatypes <> nat ind
R1355:1357 Coq.Init.Datatypes <> nat ind
binder 1351:1351 <> x:12
R1373:1376 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R1389:1393 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R1377:1382 MetaCoq.Template.TemplateMonad.Core <> tmEval constr
R1388:1388 MetaCoq.Translations.param_all <> x:12 var
R1384:1386 MetaCoq.Template.TemplateMonad.Common <> cbv constr
binder 1372:1372 <> x:13
R1395:1398 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R1408:1412 MetaCoq.Template.monad_utils MonadNotation ::monad_scope:x_'<-'_x_';;'_x not
R1399:1405 MetaCoq.Template.TemplateMonad.Core <> tmQuote constr
R1407:1407 MetaCoq.Translations.param_all <> x:13 var
binder 1394:1394 <> t:14
R1419:1419 MetaCoq.Translations.param_all <> t:14 var
R1431:1441 MetaCoq.Template.Ast <> tLambda constr
R1444:1449 MetaCoq.Template.BasicAst <> nNamed constr
R1462:1469 MetaCoq.Template.TemplateMonad.Core <> tmReturn constr
R1483:1490 MetaCoq.Template.TemplateMonad.Core <> tmReturn constr
syndef 1513:1519 <> name_of
R1577:1583 MetaCoq.Translations.param_all <> getName def
R1594:1596 Coq.Init.Datatypes <> nat ind
binder 1590:1590 <> n:16
R1658:1669 MetaCoq.Translations.param_all <> translateAll def
not 1620:1620 <> :::'Derive'_'Translations'_'for'_x
R1744:1768 MetaCoq.Translations.param_unary <> persistentTranslate_prune def
R1772:1775 Coq.Init.Datatypes <> true constr
not 1696:1696 <> :::'Derive'_'pruned'_'Parametricity'_'for'_x
R1846:1870 MetaCoq.Translations.param_unary <> persistentTranslate_prune def
R1874:1878 Coq.Init.Datatypes <> false constr
not 1800:1800 <> :::'Derive'_'full'_'Parametricity'_'for'_x
R1956:1980 MetaCoq.Translations.param_exists <> persistentExistsTranslate def
R1984:1987 Coq.Init.Datatypes <> true constr
not 1903:1903 <> :::'Derive'_'existential'_'Parametricity'_'for'_x
R2044:2068 MetaCoq.Translations.param_exists <> persistentExistsTranslate def
not 2012:2012 <> :::'Derive'_'∃∃'_'for'_x
R2127:2151 MetaCoq.Translations.param_unary <> persistentTranslate_prune def
R2155:2158 Coq.Init.Datatypes <> true constr
not 2095:2095 <> :::'Derive'_'∀∀'_'for'_x
